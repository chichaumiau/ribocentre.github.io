I"ý<p>&lt;!DOCTYPE html&gt;</p>
<html>

  <head>
    <script src="http://localhost:4000/js/svg-pan-zoom.js"></script>
  </head>

  <body>
    
    <embed type="image/svg+xml" src="/images/VS2D.svg" id="my-embed" />

    <script>
    document.getElementById('my-embed').addEventListener('load', function(){
     // Will get called after embed element was loaded
     svgPanZoom(document.getElementById('my-embed'), {
          zoomEnabled: true,
          controlIconsEnabled: true,
          fit: true,
          center: true,
          minZoom: 0.1
        });
    })


         


   
      // Don't use window.onLoad like this in production, because it can only listen to one function.
      window.onload = function() {
        // Expose to window namespase for testing purposes
        window.panZoomInstance = svgPanZoom('#svg-id', {
          zoomEnabled: true,
          controlIconsEnabled: true,
          fit: true,
          center: true,
          minZoom: 0.1
        });

        // Zoom out
        panZoomInstance.zoom(0.2);

        function customPanBy(amount){ // {x: 1, y: 2}
          var animationTime = 300 // ms
            , animationStepTime = 15 // one frame per 30 ms
            , animationSteps = animationTime / animationStepTime
            , animationStep = 0
            , intervalID = null
            , stepX = amount.x / animationSteps
            , stepY = amount.y / animationSteps

          intervalID = setInterval(function(){
            if (animationStep++ < animationSteps) {
              panZoomInstance.panBy({x: stepX, y: stepY})
            } else {
              // Cancel interval
              clearInterval(intervalID)
            }
          }, animationStepTime)
        }

        var button = document.getElementById("animate")
        button.addEventListener("click", function() {
          // Pan by any values from -80 to 80
          customPanBy({x: Math.round(Math.random() * 160 - 80), y: Math.round(Math.random() * 160 - 80)})
        });
      };
    </script>

  </body>

</html>
:ET